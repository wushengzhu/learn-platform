# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Page {
  total: Int!
  pageNum: Int!
  pageSize: Int!
}

type Result {
  code: Int!
  message: String
  data: String
}

type ShopImageType {
  id: String
  url: String!
  remark: String
}

type ShopType {
  id: String!
  createdAt: DateTime!
  createdBy: String
  updatedAt: DateTime
  updatedBy: String
  deletedAt: DateTime
  deletedBy: String

  """营业执照"""
  businessLicense: String!

  """法人身份证正面"""
  identityCardFrontImg: String

  """法人身份证反面"""
  identityCardBackImg: String

  """标签 以，隔开"""
  tags: String

  """简介"""
  description: String

  """机构名"""
  name: String

  """logo"""
  logo: String

  """成立日期"""
  establishmentDate: DateTime

  """法定代表人"""
  representative: String

  """经度"""
  longitude: String

  """纬度"""
  latitude: String

  """地址"""
  address: String

  """电话"""
  tel: String

  """封面图"""
  shopFrontImg: [ShopImageType!]

  """室内图"""
  shopRoomImg: [ShopImageType!]

  """其他图"""
  shopOtherImg: [ShopImageType!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type OrderTimeType {
  """开始时间"""
  startTime: String!

  """结束时间"""
  endTime: String!

  """key"""
  key: Float!
}

type ReducibleTimeType {
  """周几"""
  week: String!

  """可约时间 json"""
  orderTime: [OrderTimeType!]!
}

type CourseType {
  id: String!
  createdAt: DateTime!
  createdBy: String
  updatedAt: DateTime
  updatedBy: String
  deletedAt: DateTime
  deletedBy: String
  name: String!
  desc: String
  group: String!
  baseAbility: String!
  limitNumber: Float!
  duration: Float!
  reserveInfo: String
  refundInfo: String
  otherInfo: String

  """可约时间"""
  reducibleTime: [ReducibleTimeType!]
}

type CardType {
  """id"""
  id: String!

  """名字"""
  name: String!

  """
  卡类型 
       TIME = "time",
      DURATION = "duration"
  """
  type: String!

  """上课次数"""
  time: Float!

  """有效期 （天）"""
  validityDay: Float!

  """课程"""
  course: CourseType!
}

type ProductType {
  id: String!
  createdAt: DateTime!
  createdBy: String
  updatedAt: DateTime
  updatedBy: String
  deletedAt: DateTime
  deletedBy: String

  """名称"""
  name: String!

  """描述"""
  desc: String

  """状态"""
  status: String!

  """距离"""
  distance: String!

  """分类"""
  type: String

  """库存总数"""
  stock: Float!

  """当前库存"""
  curStock: Float!

  """卖出去多少"""
  buyNumber: Float!

  """每人限购数量"""
  limitBuyNumber: Float!

  """封面图"""
  coverUrl: String!

  """头部banner图"""
  bannerUrl: String!

  """原价"""
  originalPrice: Float!

  """优惠价"""
  preferentialPrice: Float!

  """门店信息"""
  shop: ShopType!

  """消费卡"""
  cards: [CardType!]
}

type ProductTypeType {
  """key"""
  key: String!

  """名称"""
  title: String!
}

type ProductResult {
  code: Int!
  message: String!
  data: ProductType
}

type ProductResults {
  code: Int!
  message: String
  data: [ProductType!]
  page: Page
}

type ProductTypesResults {
  code: Int!
  message: String
  data: [ProductTypeType!]
  page: Page
}

type UserType {
  id: String!

  """昵称"""
  name: String

  """简介"""
  desc: String

  """账号"""
  account: String!

  """密码"""
  password: String!

  """性别"""
  gender: Boolean

  """tel"""
  tel: String

  """头像"""
  avatar: String
}

type UserResults {
  code: Int!
  message: String
  data: [UserType!]
  page: Page
}

type OSSType {
  """过期时间"""
  expire: String!

  """策略"""
  policy: String!

  """签名"""
  signature: String!

  """key"""
  accessId: String!

  """主机"""
  host: String!

  """目录"""
  dir: String!
}

type StudentType {
  id: String!

  """昵称"""
  name: String

  """手机号"""
  tel: String

  """头像"""
  avatar: String

  """账号"""
  account: String

  """密码"""
  password: String

  """简介"""
  desc: String

  """性别"""
  gender: Boolean

  """openid"""
  openid: String
}

type StudentResult {
  code: Int!
  message: String!
  data: StudentType
}

type StudentResults {
  code: Int!
  message: String
  data: [StudentType!]
  page: Page
}

type ShopResult {
  code: Int!
  message: String!
  data: ShopType
}

type ShopResults {
  code: Int!
  message: String
  data: [ShopType!]
  page: Page
}

type DictType {
  id: String!

  """字典名称"""
  dictName: String!

  """字典编码"""
  dictCode: String!

  """模块编码"""
  modCode: String!

  """父节点"""
  parentId: String

  """是否启用"""
  isCanUse: Boolean
}

type DictResult {
  code: Int!
  message: String!
  data: DictType
}

type DictResults {
  code: Int!
  message: String
  data: [DictType!]
  page: Page
}

type CourseResult {
  code: Int!
  message: String!
  data: CourseType
}

type CourseResults {
  code: Int!
  message: String
  data: [CourseType!]
  page: Page
}

type CardResult {
  code: Int!
  message: String!
  data: CardType
}

type CardResults {
  code: Int!
  message: String
  data: [CardType!]
  page: Page
}

type Query {
  """使用id查询用户"""
  getUserById(id: String!): UserType!

  """使用id查询用户"""
  getUserInfo: UserType!
  getUsers(page: PageInput!, name: String): UserResults!

  """获取OSS相关信息"""
  getOSSInfo: OSSType!
  getStudentById(id: String!): StudentResult!

  """使用id查询用户"""
  getStudentInfoByGuard: StudentType!
  getStudents(page: PageInput!): StudentResults!
  getShopInfoById(id: String!): ShopResult!
  getShops(page: PageInput!, name: String): ShopResults!
  getDictInfoById(id: String!): DictResult!
  getDictsByParentId(parentId: String!): DictResults!
  getDicts(page: PageInput!, parentId: String, name: String, code: String): DictResults!
  getCourseById(id: String!): CourseResult!
  getCourses(page: PageInput!, name: String): CourseResults!
  getCardById(id: String!): CardResult!
  getCards(page: PageInput!, courseId: String!, name: String): CardResults!
  getProductTypes: ProductTypesResults!
  getProductById(id: String!): ProductResult!
  getProducts(page: PageInput!, name: String): ProductResults!
  getProductsForH5(page: PageInput!, latitude: Float!, longitude: Float!, type: String, name: String): ProductResults!
}

input PageInput {
  pageNum: Float!
  pageSize: Float!
}

type Mutation {
  """新增用户"""
  create(params: UserInput!): Boolean!

  """使用账号获取用户"""
  getUserByAccount(account: String!): UserType!

  """更新用户"""
  updateUserInfo(id: String!, params: UserInput!): Result!

  """删除用户"""
  del(id: String!): Boolean!
  commitStudent(params: StudentInput!, id: String): StudentResult!
  commitShop(params: ShopInput!, id: String): ShopResult!
  deleteShop(id: String!): Result!

  """获取短信服务验证码"""
  sendCodeMsg(tel: String!): Result!

  """电话登录"""
  login(tel: String!, code: String!): Result!

  """学员登录"""
  studentLogin(account: String!, password: String!): Result!

  """学员注册"""
  studentRegister(account: String!, password: String!, avatar: String, tel: String): Result!

  """用户登录"""
  userLogin(account: String!, password: String!): Result!

  """用户注册"""
  userRegister(account: String!, password: String!, avatar: String!, tel: String!): Result!
  saveDict(params: DictInput!, id: String): DictResult!
  deleteDict(id: String!): Result!
  saveCourse(params: PartialCourseInput!, id: String): CourseResult!
  deleteCourse(id: String!): Result!
  saveCard(params: CardInput!, courseId: String!, id: String): CardResult!
  deleteCard(id: String!): Result!
  saveProduct(params: PartialProductInput!, id: String): ProductResult!
  deleteProduct(id: String!): Result!
}

input UserInput {
  name: String!

  """简介"""
  desc: String!

  """性别"""
  gender: Boolean!

  """头像"""
  avatar: String!
}

input StudentInput {
  """昵称"""
  name: String

  """手机号"""
  tel: String

  """头像"""
  avatar: String

  """账号"""
  account: String

  """密码"""
  password: String

  """简介"""
  desc: String

  """性别"""
  gender: Boolean
}

input ShopInput {
  """名称"""
  name: String!

  """logo"""
  logo: String!

  """手机号"""
  tel: String

  """法人"""
  representative: String

  """成立日期"""
  establishmentDate: DateTime!

  """tags"""
  tags: String

  """longitude"""
  longitude: String

  """latitude"""
  latitude: String

  """latitude"""
  address: String

  """营业执照"""
  businessLicense: String!

  """简介"""
  description: String

  """法人身份证正面"""
  identityCardFrontImg: String

  """法人身份证反面"""
  identityCardBackImg: String

  """机构门面照片"""
  shopFrontImg: [ShopImageInput!]

  """机构环境照片"""
  shopRoomImg: [ShopImageInput!]

  """机构环境照片"""
  shopOtherImg: [ShopImageInput!]
}

input ShopImageInput {
  id: String
  url: String!
  remark: String
}

input DictInput {
  """字典名称"""
  dictName: String!

  """字典编码"""
  dictCode: String!

  """模块编码"""
  modCode: String!

  """父节点"""
  parentId: String

  """是否启用"""
  isCanUse: Boolean
}

input PartialCourseInput {
  """课程名称"""
  name: String

  """课程描述"""
  desc: String

  """适龄人群"""
  group: String

  """适合基础"""
  baseAbility: String

  """限制上课人数"""
  limitNumber: Float

  """持续时间"""
  duration: Float

  """预约信息"""
  reserveInfo: String

  """退款信息"""
  refundInfo: String

  """其他说明信息"""
  otherInfo: String

  """可约时间"""
  reducibleTime: [ReducibleTimeInput!]
}

input ReducibleTimeInput {
  """周几"""
  week: String!

  """可约时间 json"""
  orderTime: [OrderTimeInput!]!
}

input OrderTimeInput {
  """开始时间"""
  startTime: String!

  """结束时间"""
  endTime: String!

  """key"""
  key: Float!
}

input CardInput {
  """名字"""
  name: String!

  """卡类型 次数：time 时长：duration"""
  type: String!

  """上课次数"""
  time: Float

  """有效期 （天）"""
  validityDay: Float!
}

input PartialProductInput {
  """名称"""
  name: String

  """描述"""
  desc: String

  """状态"""
  status: String

  """分类"""
  type: String

  """库存总数"""
  stock: Float

  """每人限购数量"""
  limitBuyNumber: Float

  """封面图"""
  coverUrl: String

  """头部banner图"""
  bannerUrl: String

  """原价"""
  originalPrice: Float

  """优惠价"""
  preferentialPrice: Float

  """消费卡"""
  cards: [String!]
}